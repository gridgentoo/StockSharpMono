<?xml version="1.0" encoding="utf-8"?>
<topic id="355f6b70-c920-48b6-b2f1-31584ebb82f3" revisionNumber="1">
  <developerConceptualDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
    <introduction>
       <para>The same <codeEntityReference qualifyHint="false" autoUpgrade="true">M:StockSharp.BusinessEntities.IConnector.RegisterOrder(StockSharp.BusinessEntities.Order)</codeEntityReference>
		method used to register stop orders, but with the <codeEntityReference qualifyHint="false">F:StockSharp.Messages.OrderTypes.Conditional</codeEntityReference> type of order indicating:</para>   
        <code language="C#">
        <![CDATA[
private void NewStopOrderClick(object sender, RoutedEventArgs e)
{
	var newOrder = new OrderConditionalWindow
	{
		Order = new Order
		{
			Security = SecurityPicker.SelectedSecurity,
			Type = OrderTypes.Conditional,
		},
		SecurityProvider = Connector,
		MarketDataProvider = Connector,
		Portfolios = new PortfolioDataSource(Connector),
		Adapter = Connector.TransactionAdapter
	};

	if (newOrder.ShowModal(this))
		Connector.RegisterOrder(newOrder.Order);
}
		]]>
		</code>
		
		<para>Next, the <legacyBold>Conditional Order Register</legacyBold> dialogue opened where you need to specify the type and parameters of such order.</para>
		
		<para>Behind the scenes the conditions are created and configured in the <codeEntityReference>T:StockSharp.Xaml.OrderConditionalWindow</codeEntityReference>
		code using the <codeEntityReference>T:StockSharp.Cqg.Com.CqgComOrderCondition</codeEntityReference> class.</para>
    </introduction>
  </developerConceptualDocument>
</topic>